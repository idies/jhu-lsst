apiVersion: apps/v1
kind: StatefulSet
metadata:
  creationTimestamp: "2020-06-23T18:06:43Z"
  generation: 1
  labels:
    MSSQL_CLUSTER: dracula
  managedFields:
  - apiVersion: apps/v1
    fieldsType: FieldsV1
    fieldsV1:
      f:metadata:
        f:labels:
          .: {}
          f:MSSQL_CLUSTER: {}
      f:spec:
        f:podManagementPolicy: {}
        f:replicas: {}
        f:revisionHistoryLimit: {}
        f:selector:
          f:matchLabels:
            .: {}
            f:MSSQL_CLUSTER: {}
            f:app: {}
            f:plane: {}
            f:role: {}
        f:serviceName: {}
        f:template:
          f:metadata:
            f:labels:
              .: {}
              f:MSSQL_CLUSTER: {}
              f:app: {}
              f:plane: {}
              f:role: {}
          f:spec:
            f:containers:
              k:{"name":"fluentbit"}:
                .: {}
                f:env:
                  .: {}
                  k:{"name":"FLUENT_ELASTICSEARCH_HOST"}:
                    .: {}
                    f:name: {}
                    f:value: {}
                  k:{"name":"FLUENT_ELASTICSEARCH_PORT"}:
                    .: {}
                    f:name: {}
                    f:value: {}
                  k:{"name":"FLUENTBIT_CONFIG"}:
                    .: {}
                    f:name: {}
                    f:value: {}
                  k:{"name":"KUBERNETES_NODE_NAME"}:
                    .: {}
                    f:name: {}
                    f:valueFrom:
                      .: {}
                      f:fieldRef:
                        .: {}
                        f:apiVersion: {}
                        f:fieldPath: {}
                  k:{"name":"KUBERNETES_POD_NAME"}:
                    .: {}
                    f:name: {}
                    f:valueFrom:
                      .: {}
                      f:fieldRef:
                        .: {}
                        f:apiVersion: {}
                        f:fieldPath: {}
                  k:{"name":"MSSQL_AGENT_GRPC_PORT"}:
                    .: {}
                    f:name: {}
                    f:value: {}
                  k:{"name":"MSSQL_AGENT_HTTPS_PORT"}:
                    .: {}
                    f:name: {}
                    f:value: {}
                  k:{"name":"MSSQL_CONTAINER_TYPE"}:
                    .: {}
                    f:name: {}
                    f:value: {}
                  k:{"name":"MSSQL_NAMESPACE"}:
                    .: {}
                    f:name: {}
                    f:valueFrom:
                      .: {}
                      f:fieldRef:
                        .: {}
                        f:apiVersion: {}
                        f:fieldPath: {}
                  k:{"name":"MSSQL_POD_KIND"}:
                    .: {}
                    f:name: {}
                    f:value: {}
                  k:{"name":"MSSQL_POD_TYPE"}:
                    .: {}
                    f:name: {}
                    f:value: {}
                f:image: {}
                f:imagePullPolicy: {}
                f:name: {}
                f:ports:
                  .: {}
                  k:{"containerPort":2020,"protocol":"TCP"}:
                    .: {}
                    f:containerPort: {}
                    f:name: {}
                    f:protocol: {}
                  k:{"containerPort":8311,"protocol":"TCP"}:
                    .: {}
                    f:containerPort: {}
                    f:name: {}
                    f:protocol: {}
                  k:{"containerPort":8411,"protocol":"TCP"}:
                    .: {}
                    f:containerPort: {}
                    f:name: {}
                    f:protocol: {}
                f:resources:
                  .: {}
                  f:requests:
                    .: {}
                    f:cpu: {}
                    f:memory: {}
                f:terminationMessagePath: {}
                f:terminationMessagePolicy: {}
                f:volumeMounts:
                  .: {}
                  k:{"mountPath":"/mnt/logs"}:
                    .: {}
                    f:mountPath: {}
                    f:name: {}
                    f:readOnly: {}
                  k:{"mountPath":"/var/log"}:
                    .: {}
                    f:mountPath: {}
                    f:name: {}
                    f:subPath: {}
                  k:{"mountPath":"/var/opt"}:
                    .: {}
                    f:mountPath: {}
                    f:name: {}
                  k:{"mountPath":"/var/run"}:
                    .: {}
                    f:mountPath: {}
                    f:name: {}
                    f:subPath: {}
                  k:{"mountPath":"/var/run/configmaps/cluster"}:
                    .: {}
                    f:mountPath: {}
                    f:name: {}
                  k:{"mountPath":"/var/run/secrets/certificates/agent"}:
                    .: {}
                    f:mountPath: {}
                    f:name: {}
                    f:readOnly: {}
                  k:{"mountPath":"/var/run/secrets/credentials/controller-internal"}:
                    .: {}
                    f:mountPath: {}
                    f:name: {}
                    f:readOnly: {}
                  k:{"mountPath":"/var/run/secrets/credentials/pool"}:
                    .: {}
                    f:mountPath: {}
                    f:name: {}
                    f:readOnly: {}
              k:{"name":"hadoop-hivemetastore"}:
                .: {}
                f:env:
                  .: {}
                  k:{"name":"MSSQL_AGENT_GRPC_PORT"}:
                    .: {}
                    f:name: {}
                    f:value: {}
                  k:{"name":"MSSQL_AGENT_HTTPS_PORT"}:
                    .: {}
                    f:name: {}
                    f:value: {}
                  k:{"name":"MSSQL_CONTAINER_TYPE"}:
                    .: {}
                    f:name: {}
                    f:value: {}
                  k:{"name":"MSSQL_NAMESPACE"}:
                    .: {}
                    f:name: {}
                    f:valueFrom:
                      .: {}
                      f:fieldRef:
                        .: {}
                        f:apiVersion: {}
                        f:fieldPath: {}
                  k:{"name":"MSSQL_POD_KIND"}:
                    .: {}
                    f:name: {}
                    f:value: {}
                  k:{"name":"MSSQL_POD_TYPE"}:
                    .: {}
                    f:name: {}
                    f:value: {}
                f:image: {}
                f:imagePullPolicy: {}
                f:name: {}
                f:ports:
                  .: {}
                  k:{"containerPort":8302,"protocol":"TCP"}:
                    .: {}
                    f:containerPort: {}
                    f:name: {}
                    f:protocol: {}
                  k:{"containerPort":8402,"protocol":"TCP"}:
                    .: {}
                    f:containerPort: {}
                    f:name: {}
                    f:protocol: {}
                  k:{"containerPort":9084,"protocol":"TCP"}:
                    .: {}
                    f:containerPort: {}
                    f:name: {}
                    f:protocol: {}
                f:resources: {}
                f:terminationMessagePath: {}
                f:terminationMessagePolicy: {}
                f:volumeMounts:
                  .: {}
                  k:{"mountPath":"/var/log"}:
                    .: {}
                    f:mountPath: {}
                    f:name: {}
                    f:subPath: {}
                  k:{"mountPath":"/var/run"}:
                    .: {}
                    f:mountPath: {}
                    f:name: {}
                    f:subPath: {}
                  k:{"mountPath":"/var/run/configmaps/cluster"}:
                    .: {}
                    f:mountPath: {}
                    f:name: {}
                  k:{"mountPath":"/var/run/configmaps/hadoop"}:
                    .: {}
                    f:mountPath: {}
                    f:name: {}
                    f:readOnly: {}
                  k:{"mountPath":"/var/run/secrets/certificates/agent"}:
                    .: {}
                    f:mountPath: {}
                    f:name: {}
                    f:readOnly: {}
                  k:{"mountPath":"/var/run/secrets/credentials/controller-internal"}:
                    .: {}
                    f:mountPath: {}
                    f:name: {}
                    f:readOnly: {}
                  k:{"mountPath":"/var/run/secrets/credentials/pool"}:
                    .: {}
                    f:mountPath: {}
                    f:name: {}
                    f:readOnly: {}
              k:{"name":"hadoop-livy-sparkhistory"}:
                .: {}
                f:env:
                  .: {}
                  k:{"name":"MSSQL_AGENT_GRPC_PORT"}:
                    .: {}
                    f:name: {}
                    f:value: {}
                  k:{"name":"MSSQL_AGENT_HTTPS_PORT"}:
                    .: {}
                    f:name: {}
                    f:value: {}
                  k:{"name":"MSSQL_CONTAINER_TYPE"}:
                    .: {}
                    f:name: {}
                    f:value: {}
                  k:{"name":"MSSQL_NAMESPACE"}:
                    .: {}
                    f:name: {}
                    f:valueFrom:
                      .: {}
                      f:fieldRef:
                        .: {}
                        f:apiVersion: {}
                        f:fieldPath: {}
                  k:{"name":"MSSQL_POD_KIND"}:
                    .: {}
                    f:name: {}
                    f:value: {}
                  k:{"name":"MSSQL_POD_TYPE"}:
                    .: {}
                    f:name: {}
                    f:value: {}
                f:image: {}
                f:imagePullPolicy: {}
                f:name: {}
                f:ports:
                  .: {}
                  k:{"containerPort":8301,"protocol":"TCP"}:
                    .: {}
                    f:containerPort: {}
                    f:name: {}
                    f:protocol: {}
                  k:{"containerPort":8401,"protocol":"TCP"}:
                    .: {}
                    f:containerPort: {}
                    f:name: {}
                    f:protocol: {}
                  k:{"containerPort":8998,"protocol":"TCP"}:
                    .: {}
                    f:containerPort: {}
                    f:name: {}
                    f:protocol: {}
                  k:{"containerPort":18480,"protocol":"TCP"}:
                    .: {}
                    f:containerPort: {}
                    f:name: {}
                    f:protocol: {}
                f:resources: {}
                f:terminationMessagePath: {}
                f:terminationMessagePolicy: {}
                f:volumeMounts:
                  .: {}
                  k:{"mountPath":"/var/log"}:
                    .: {}
                    f:mountPath: {}
                    f:name: {}
                    f:subPath: {}
                  k:{"mountPath":"/var/run"}:
                    .: {}
                    f:mountPath: {}
                    f:name: {}
                    f:subPath: {}
                  k:{"mountPath":"/var/run/configmaps/cluster"}:
                    .: {}
                    f:mountPath: {}
                    f:name: {}
                  k:{"mountPath":"/var/run/configmaps/hadoop"}:
                    .: {}
                    f:mountPath: {}
                    f:name: {}
                    f:readOnly: {}
                  k:{"mountPath":"/var/run/secrets/certificates/agent"}:
                    .: {}
                    f:mountPath: {}
                    f:name: {}
                    f:readOnly: {}
                  k:{"mountPath":"/var/run/secrets/credentials/controller-internal"}:
                    .: {}
                    f:mountPath: {}
                    f:name: {}
                    f:readOnly: {}
                  k:{"mountPath":"/var/run/secrets/credentials/pool"}:
                    .: {}
                    f:mountPath: {}
                    f:name: {}
                    f:readOnly: {}
              k:{"name":"hadoop-yarn-jobhistory"}:
                .: {}
                f:env:
                  .: {}
                  k:{"name":"MSSQL_AGENT_GRPC_PORT"}:
                    .: {}
                    f:name: {}
                    f:value: {}
                  k:{"name":"MSSQL_AGENT_HTTPS_PORT"}:
                    .: {}
                    f:name: {}
                    f:value: {}
                  k:{"name":"MSSQL_CONTAINER_TYPE"}:
                    .: {}
                    f:name: {}
                    f:value: {}
                  k:{"name":"MSSQL_NAMESPACE"}:
                    .: {}
                    f:name: {}
                    f:valueFrom:
                      .: {}
                      f:fieldRef:
                        .: {}
                        f:apiVersion: {}
                        f:fieldPath: {}
                  k:{"name":"MSSQL_POD_KIND"}:
                    .: {}
                    f:name: {}
                    f:value: {}
                  k:{"name":"MSSQL_POD_TYPE"}:
                    .: {}
                    f:name: {}
                    f:value: {}
                f:image: {}
                f:imagePullPolicy: {}
                f:name: {}
                f:ports:
                  .: {}
                  k:{"containerPort":8030,"protocol":"TCP"}:
                    .: {}
                    f:containerPort: {}
                    f:name: {}
                    f:protocol: {}
                  k:{"containerPort":8031,"protocol":"TCP"}:
                    .: {}
                    f:containerPort: {}
                    f:name: {}
                    f:protocol: {}
                  k:{"containerPort":8032,"protocol":"TCP"}:
                    .: {}
                    f:containerPort: {}
                    f:name: {}
                    f:protocol: {}
                  k:{"containerPort":8033,"protocol":"TCP"}:
                    .: {}
                    f:containerPort: {}
                    f:name: {}
                    f:protocol: {}
                  k:{"containerPort":8090,"protocol":"TCP"}:
                    .: {}
                    f:containerPort: {}
                    f:name: {}
                    f:protocol: {}
                  k:{"containerPort":8300,"protocol":"TCP"}:
                    .: {}
                    f:containerPort: {}
                    f:name: {}
                    f:protocol: {}
                  k:{"containerPort":8400,"protocol":"TCP"}:
                    .: {}
                    f:containerPort: {}
                    f:name: {}
                    f:protocol: {}
                  k:{"containerPort":19888,"protocol":"TCP"}:
                    .: {}
                    f:containerPort: {}
                    f:name: {}
                    f:protocol: {}
                f:resources: {}
                f:terminationMessagePath: {}
                f:terminationMessagePolicy: {}
                f:volumeMounts:
                  .: {}
                  k:{"mountPath":"/var/log"}:
                    .: {}
                    f:mountPath: {}
                    f:name: {}
                    f:subPath: {}
                  k:{"mountPath":"/var/run"}:
                    .: {}
                    f:mountPath: {}
                    f:name: {}
                    f:subPath: {}
                  k:{"mountPath":"/var/run/configmaps/cluster"}:
                    .: {}
                    f:mountPath: {}
                    f:name: {}
                  k:{"mountPath":"/var/run/configmaps/hadoop"}:
                    .: {}
                    f:mountPath: {}
                    f:name: {}
                    f:readOnly: {}
                  k:{"mountPath":"/var/run/secrets/certificates/agent"}:
                    .: {}
                    f:mountPath: {}
                    f:name: {}
                    f:readOnly: {}
                  k:{"mountPath":"/var/run/secrets/credentials/controller-internal"}:
                    .: {}
                    f:mountPath: {}
                    f:name: {}
                    f:readOnly: {}
                  k:{"mountPath":"/var/run/secrets/credentials/metricsdb-wo-secret"}:
                    .: {}
                    f:mountPath: {}
                    f:name: {}
                    f:readOnly: {}
                  k:{"mountPath":"/var/run/secrets/credentials/pool"}:
                    .: {}
                    f:mountPath: {}
                    f:name: {}
                    f:readOnly: {}
            f:dnsPolicy: {}
            f:imagePullSecrets:
              .: {}
              k:{"name":"mssql-private-registry"}:
                .: {}
                f:name: {}
            f:restartPolicy: {}
            f:schedulerName: {}
            f:securityContext: {}
            f:terminationGracePeriodSeconds: {}
            f:volumes:
              .: {}
              k:{"name":"cluster-config-volume"}:
                .: {}
                f:configMap:
                  .: {}
                  f:defaultMode: {}
                  f:name: {}
                f:name: {}
              k:{"name":"controller-internal-secret"}:
                .: {}
                f:name: {}
                f:secret:
                  .: {}
                  f:defaultMode: {}
                  f:secretName: {}
              k:{"name":"hadoop-config-volume"}:
                .: {}
                f:configMap:
                  .: {}
                  f:defaultMode: {}
                  f:name: {}
                f:name: {}
              k:{"name":"metricsdb-wo-secret"}:
                .: {}
                f:name: {}
                f:secret:
                  .: {}
                  f:defaultMode: {}
                  f:secretName: {}
              k:{"name":"mssql-master-pool-secret"}:
                .: {}
                f:name: {}
                f:secret:
                  .: {}
                  f:defaultMode: {}
                  f:secretName: {}
              k:{"name":"node-admin-login-secrets"}:
                .: {}
                f:name: {}
                f:secret:
                  .: {}
                  f:defaultMode: {}
                  f:secretName: {}
              k:{"name":"sparkhead-agent-secret"}:
                .: {}
                f:name: {}
                f:secret:
                  .: {}
                  f:defaultMode: {}
                  f:secretName: {}
              k:{"name":"var-run"}:
                .: {}
                f:emptyDir:
                  .: {}
                  f:medium: {}
                f:name: {}
        f:updateStrategy:
          f:type: {}
        f:volumeClaimTemplates: {}
    manager: FxVersion
    operation: Update
    time: "2020-06-23T18:06:43Z"
  - apiVersion: apps/v1
    fieldsType: FieldsV1
    fieldsV1:
      f:status:
        f:collisionCount: {}
        f:currentReplicas: {}
        f:currentRevision: {}
        f:observedGeneration: {}
        f:readyReplicas: {}
        f:replicas: {}
        f:updateRevision: {}
        f:updatedReplicas: {}
    manager: kube-controller-manager
    operation: Update
    time: "2020-06-23T18:06:50Z"
  name: sparkhead
  namespace: dracula
  resourceVersion: "17247769"
  selfLink: /apis/apps/v1/namespaces/dracula/statefulsets/sparkhead
  uid: d42c3fa8-42f7-4f13-affe-992d2342c446
spec:
  podManagementPolicy: Parallel
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      MSSQL_CLUSTER: dracula
      app: sparkhead
      plane: data
      role: sparkhead-pool
  serviceName: sparkhead-svc
  template:
    metadata:
      creationTimestamp: null
      labels:
        MSSQL_CLUSTER: dracula
        app: sparkhead
        plane: data
        role: sparkhead-pool
    spec:
      containers:
      - env:
        - name: MSSQL_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: MSSQL_POD_TYPE
          value: sparkhead
        - name: MSSQL_CONTAINER_TYPE
          value: hadoop-yarn-jobhistory
        - name: MSSQL_POD_KIND
          value: StatefulSet
        - name: MSSQL_AGENT_GRPC_PORT
          value: "8300"
        - name: MSSQL_AGENT_HTTPS_PORT
          value: "8400"
        image: mcr.microsoft.com/mssql/bdc/mssql-hadoop:2019-CU4-ubuntu-16.04
        imagePullPolicy: Always
        name: hadoop-yarn-jobhistory
        ports:
        - containerPort: 8090
          name: yarn-ui-8090
          protocol: TCP
        - containerPort: 8030
          name: yarn-8030
          protocol: TCP
        - containerPort: 8031
          name: yarn-8031
          protocol: TCP
        - containerPort: 8032
          name: yarn-8032
          protocol: TCP
        - containerPort: 8033
          name: yarn-8033
          protocol: TCP
        - containerPort: 19888
          name: job-19888
          protocol: TCP
        - containerPort: 8300
          name: agent-grpc-8300
          protocol: TCP
        - containerPort: 8400
          name: agent-srv-8400
          protocol: TCP
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /var/run/secrets/credentials/pool
          name: mssql-master-pool-secret
          readOnly: true
        - mountPath: /var/run/secrets/credentials/controller-internal
          name: controller-internal-secret
          readOnly: true
        - mountPath: /var/run/configmaps/cluster
          name: cluster-config-volume
        - mountPath: /var/run/configmaps/hadoop
          name: hadoop-config-volume
          readOnly: true
        - mountPath: /var/log
          name: logs
          subPath: hadoop-yarn-jobhistory
        - mountPath: /var/run
          name: var-run
          subPath: hadoop-yarn-jobhistory
        - mountPath: /var/run/secrets/certificates/agent
          name: sparkhead-agent-secret
          readOnly: true
        - mountPath: /var/run/secrets/credentials/metricsdb-wo-secret
          name: metricsdb-wo-secret
          readOnly: true
      - env:
        - name: MSSQL_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: MSSQL_POD_TYPE
          value: sparkhead
        - name: MSSQL_CONTAINER_TYPE
          value: hadoop-livy-sparkhistory
        - name: MSSQL_AGENT_GRPC_PORT
          value: "8301"
        - name: MSSQL_AGENT_HTTPS_PORT
          value: "8401"
        - name: MSSQL_POD_KIND
          value: StatefulSet
        image: mcr.microsoft.com/mssql/bdc/mssql-hadoop:2019-CU4-ubuntu-16.04
        imagePullPolicy: Always
        name: hadoop-livy-sparkhistory
        ports:
        - containerPort: 18480
          name: sparkhist-18480
          protocol: TCP
        - containerPort: 8998
          name: livy-8998
          protocol: TCP
        - containerPort: 8301
          name: agent-grpc-8301
          protocol: TCP
        - containerPort: 8401
          name: agent-srv-8401
          protocol: TCP
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /var/run/secrets/credentials/pool
          name: mssql-master-pool-secret
          readOnly: true
        - mountPath: /var/run/secrets/credentials/controller-internal
          name: controller-internal-secret
          readOnly: true
        - mountPath: /var/run/configmaps/cluster
          name: cluster-config-volume
        - mountPath: /var/run/configmaps/hadoop
          name: hadoop-config-volume
          readOnly: true
        - mountPath: /var/log
          name: logs
          subPath: hadoop-livy-sparkhistory
        - mountPath: /var/run
          name: var-run
          subPath: hadoop-livy-sparkhistory
        - mountPath: /var/run/secrets/certificates/agent
          name: sparkhead-agent-secret
          readOnly: true
      - env:
        - name: MSSQL_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: MSSQL_POD_TYPE
          value: sparkhead
        - name: MSSQL_CONTAINER_TYPE
          value: hadoop-hivemetastore
        - name: MSSQL_AGENT_GRPC_PORT
          value: "8302"
        - name: MSSQL_AGENT_HTTPS_PORT
          value: "8402"
        - name: MSSQL_POD_KIND
          value: StatefulSet
        image: mcr.microsoft.com/mssql/bdc/mssql-hadoop:2019-CU4-ubuntu-16.04
        imagePullPolicy: Always
        name: hadoop-hivemetastore
        ports:
        - containerPort: 9084
          name: hive-9084
          protocol: TCP
        - containerPort: 8302
          name: agent-grpc-8302
          protocol: TCP
        - containerPort: 8402
          name: agent-srv-8402
          protocol: TCP
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /var/run/secrets/credentials/pool
          name: mssql-master-pool-secret
          readOnly: true
        - mountPath: /var/run/secrets/credentials/controller-internal
          name: controller-internal-secret
          readOnly: true
        - mountPath: /var/run/configmaps/cluster
          name: cluster-config-volume
        - mountPath: /var/run/configmaps/hadoop
          name: hadoop-config-volume
          readOnly: true
        - mountPath: /var/log
          name: logs
          subPath: hadoop-hivemetastore
        - mountPath: /var/run
          name: var-run
          subPath: hadoop-hivemetastore
        - mountPath: /var/run/secrets/certificates/agent
          name: sparkhead-agent-secret
          readOnly: true
      - env:
        - name: FLUENT_ELASTICSEARCH_HOST
          value: logsdb-svc
        - name: FLUENT_ELASTICSEARCH_PORT
          value: "9200"
        - name: FLUENTBIT_CONFIG
          value: fluentbit-sparkhead-pool.conf
        - name: MSSQL_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: KUBERNETES_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: KUBERNETES_POD_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.name
        - name: MSSQL_POD_TYPE
          value: sparkhead
        - name: MSSQL_CONTAINER_TYPE
          value: fluentbit
        - name: MSSQL_POD_KIND
          value: StatefulSet
        - name: MSSQL_AGENT_GRPC_PORT
          value: "8311"
        - name: MSSQL_AGENT_HTTPS_PORT
          value: "8411"
        image: mcr.microsoft.com/mssql/bdc/mssql-monitor-fluentbit:2019-CU4-ubuntu-16.04
        imagePullPolicy: Always
        name: fluentbit
        ports:
        - containerPort: 2020
          name: fluentb-2020
          protocol: TCP
        - containerPort: 8311
          name: agent-grpc-8311
          protocol: TCP
        - containerPort: 8411
          name: agent-srv-8411
          protocol: TCP
        resources:
          requests:
            cpu: 100m
            memory: 100Mi
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /var/run/secrets/credentials/controller-internal
          name: controller-internal-secret
          readOnly: true
        - mountPath: /var/run/secrets/credentials/pool
          name: mssql-master-pool-secret
          readOnly: true
        - mountPath: /var/run/secrets/certificates/agent
          name: sparkhead-agent-secret
          readOnly: true
        - mountPath: /var/opt
          name: data
        - mountPath: /var/log
          name: logs
          subPath: fluentbit
        - mountPath: /mnt/logs
          name: logs
          readOnly: true
        - mountPath: /var/run
          name: var-run
          subPath: fluentbit
        - mountPath: /var/run/configmaps/cluster
          name: cluster-config-volume
      dnsPolicy: ClusterFirst
      imagePullSecrets:
      - name: mssql-private-registry
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 0
      volumes:
      - name: mssql-master-pool-secret
        secret:
          defaultMode: 360
          secretName: mssql-master-pool-secret
      - name: controller-internal-secret
        secret:
          defaultMode: 360
          secretName: controller-internal-secret
      - name: node-admin-login-secrets
        secret:
          defaultMode: 360
          secretName: node-admin-login-secret
      - name: sparkhead-agent-secret
        secret:
          defaultMode: 360
          secretName: sparkhead-agent-secret
      - name: metricsdb-wo-secret
        secret:
          defaultMode: 360
          secretName: metricsdb-wo-secret
      - emptyDir:
          medium: Memory
        name: var-run
      - configMap:
          defaultMode: 420
          name: cluster-configmap
        name: cluster-config-volume
      - configMap:
          defaultMode: 292
          name: mssql-hadoop-sparkhead-configmap
        name: hadoop-config-volume
  updateStrategy:
    type: OnDelete
  volumeClaimTemplates:
  - apiVersion: v1
    kind: PersistentVolumeClaim
    metadata:
      creationTimestamp: null
      name: data
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: 15Gi
      storageClassName: local-path-hdd1
      volumeMode: Filesystem
    status:
      phase: Pending
  - apiVersion: v1
    kind: PersistentVolumeClaim
    metadata:
      creationTimestamp: null
      name: logs
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: 10Gi
      storageClassName: local-path-hdd1
      volumeMode: Filesystem
    status:
      phase: Pending
status:
  collisionCount: 0
  currentReplicas: 1
  currentRevision: sparkhead-75d44457c
  observedGeneration: 1
  readyReplicas: 1
  replicas: 1
  updateRevision: sparkhead-75d44457c
  updatedReplicas: 1
