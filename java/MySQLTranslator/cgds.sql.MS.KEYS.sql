-- MS SQL key and index definitions ported from MySQL version at C:\workspaces\eclipse-luna-4.4.1\jhu-git\MySQLTranslator\cgds.sql

ALTER TABLE [statements so that refererenced
-- tables are created before referring tables.
-- DROP TABLE statements are here in the reverse order.
-- --------------------------------------------------------

DROP TABLE IF EXISTS info;
DROP TABLE IF EXISTS clinical_event_data;
DROP TABLE IF EXISTS clinical_event;
DROP TABLE IF EXISTS pdb_uniprot_residue_mapping;
DROP TABLE IF EXISTS pdb_uniprot_alignment;
DROP TABLE IF EXISTS cosmic_mutation;
DROP TABLE IF EXISTS copy_number_seg_file;
DROP TABLE IF EXISTS copy_number_seg;
DROP TABLE IF EXISTS sample_cna_event;
DROP TABLE IF EXISTS cna_event;
DROP TABLE IF EXISTS drug_interaction;
DROP TABLE IF EXISTS drug;
DROP TABLE IF EXISTS pfam_graphics;
DROP TABLE IF EXISTS text_cache;
DROP TABLE IF EXISTS gistic_to_gene;
DROP TABLE IF EXISTS gistic;
DROP TABLE IF EXISTS sanger_cancer_census;
DROP TABLE IF EXISTS protein_array_cancer_study;
DROP TABLE IF EXISTS protein_array_data;
DROP TABLE IF EXISTS protein_array_target;
DROP TABLE IF EXISTS protein_array_info;
DROP TABLE IF EXISTS mut_sig;
DROP TABLE IF EXISTS interaction;
DROP TABLE IF EXISTS clinical_attribute_meta;
DROP TABLE IF EXISTS clinical_sample;
DROP TABLE IF EXISTS clinical_patient;
DROP TABLE IF EXISTS mutation_count;
DROP TABLE IF EXISTS mutation;
DROP TABLE IF EXISTS mutation_event;
DROP TABLE IF EXISTS structural_variant;
DROP TABLE IF EXISTS sample_profile;
DROP TABLE IF EXISTS gene_panel_list;
DROP TABLE IF EXISTS gene_panel;
DROP TABLE IF EXISTS genetic_profile_samples;
DROP TABLE IF EXISTS genetic_alteration;
DROP TABLE IF EXISTS genetic_profile;
DROP TABLE IF EXISTS uniprot_id_mapping;
DROP TABLE IF EXISTS gene_alias;
DROP TABLE IF EXISTS gene;
DROP TABLE IF EXISTS sample_list_list;
DROP TABLE IF EXISTS sample_list;
DROP TABLE IF EXISTS sample;
DROP TABLE IF EXISTS patient;
DROP TABLE IF EXISTS authorities;
DROP TABLE IF EXISTS users;
DROP TABLE IF EXISTS cancer_study;
DROP TABLE IF EXISTS type_of_cancer;

-- --------------------------------------------------------
CREATE TABLE type_of_cancer] ADD CONSTRAINT pk_statements so that refererenced
-- tables are created before referring tables.
-- DROP TABLE statements are here in the reverse order.
-- --------------------------------------------------------

DROP TABLE IF EXISTS info;
DROP TABLE IF EXISTS clinical_event_data;
DROP TABLE IF EXISTS clinical_event;
DROP TABLE IF EXISTS pdb_uniprot_residue_mapping;
DROP TABLE IF EXISTS pdb_uniprot_alignment;
DROP TABLE IF EXISTS cosmic_mutation;
DROP TABLE IF EXISTS copy_number_seg_file;
DROP TABLE IF EXISTS copy_number_seg;
DROP TABLE IF EXISTS sample_cna_event;
DROP TABLE IF EXISTS cna_event;
DROP TABLE IF EXISTS drug_interaction;
DROP TABLE IF EXISTS drug;
DROP TABLE IF EXISTS pfam_graphics;
DROP TABLE IF EXISTS text_cache;
DROP TABLE IF EXISTS gistic_to_gene;
DROP TABLE IF EXISTS gistic;
DROP TABLE IF EXISTS sanger_cancer_census;
DROP TABLE IF EXISTS protein_array_cancer_study;
DROP TABLE IF EXISTS protein_array_data;
DROP TABLE IF EXISTS protein_array_target;
DROP TABLE IF EXISTS protein_array_info;
DROP TABLE IF EXISTS mut_sig;
DROP TABLE IF EXISTS interaction;
DROP TABLE IF EXISTS clinical_attribute_meta;
DROP TABLE IF EXISTS clinical_sample;
DROP TABLE IF EXISTS clinical_patient;
DROP TABLE IF EXISTS mutation_count;
DROP TABLE IF EXISTS mutation;
DROP TABLE IF EXISTS mutation_event;
DROP TABLE IF EXISTS structural_variant;
DROP TABLE IF EXISTS sample_profile;
DROP TABLE IF EXISTS gene_panel_list;
DROP TABLE IF EXISTS gene_panel;
DROP TABLE IF EXISTS genetic_profile_samples;
DROP TABLE IF EXISTS genetic_alteration;
DROP TABLE IF EXISTS genetic_profile;
DROP TABLE IF EXISTS uniprot_id_mapping;
DROP TABLE IF EXISTS gene_alias;
DROP TABLE IF EXISTS gene;
DROP TABLE IF EXISTS sample_list_list;
DROP TABLE IF EXISTS sample_list;
DROP TABLE IF EXISTS sample;
DROP TABLE IF EXISTS patient;
DROP TABLE IF EXISTS authorities;
DROP TABLE IF EXISTS users;
DROP TABLE IF EXISTS cancer_study;
DROP TABLE IF EXISTS type_of_cancer;

-- --------------------------------------------------------
CREATE TABLE type_of_cancer PRIMARY KEY ([TYPE_OF_CANCER_ID])

ALTER TABLE [type_of_cancer] ADD CONSTRAINT pk_type_of_cancer PRIMARY KEY ([TYPE_OF_CANCER_ID])

ALTER TABLE [cancer_study] ADD CONSTRAINT pk_cancer_study PRIMARY KEY ([CANCER_STUDY_ID])


-- TODO DEFINE: FOREIGNKEY (`TYPE_OF_CANCER_ID`) REFERENCES `type_of_cancer` (`TYPE_OF_CANCER_ID`)
ALTER TABLE cancer_study ADD CONSTRAINT fk_cancer_study_TYPE_OF_CANCER_ID FOREIGN KEY(TYPE_OF_CANCER_ID) REFERENCES [type_of_cancer](TYPE_OF_CANCER_ID) 

ALTER TABLE [users] ADD CONSTRAINT pk_users PRIMARY KEY ([EMAIL])

ALTER TABLE [patient] ADD CONSTRAINT pk_patient PRIMARY KEY ([INTERNAL_ID])


-- TODO DEFINE: FOREIGNKEY (`CANCER_STUDY_ID`) REFERENCES `cancer_study` (`CANCER_STUDY_ID`) ON DELETE CASCADE
ALTER TABLE patient ADD CONSTRAINT fk_patient_CANCER_STUDY_ID FOREIGN KEY(CANCER_STUDY_ID) REFERENCES [cancer_study](CANCER_STUDY_ID) ON DELETE CASCADE

ALTER TABLE [sample] ADD CONSTRAINT pk_sample PRIMARY KEY ([INTERNAL_ID])


-- TODO DEFINE: FOREIGNKEY (`PATIENT_ID`) REFERENCES `patient` (`INTERNAL_ID`) ON DELETE CASCADE
ALTER TABLE sample ADD CONSTRAINT fk_sample_PATIENT_ID FOREIGN KEY(PATIENT_ID) REFERENCES [patient](INTERNAL_ID) ON DELETE CASCADE


-- TODO DEFINE: FOREIGNKEY (`TYPE_OF_CANCER_ID`) REFERENCES `type_of_cancer` (`TYPE_OF_CANCER_ID`)
ALTER TABLE sample ADD CONSTRAINT fk_sample_TYPE_OF_CANCER_ID FOREIGN KEY(TYPE_OF_CANCER_ID) REFERENCES [type_of_cancer](TYPE_OF_CANCER_ID) 

ALTER TABLE [sample_list] ADD CONSTRAINT pk_sample_list PRIMARY KEY ([LIST_ID])


-- TODO DEFINE: FOREIGNKEY (`CANCER_STUDY_ID`) REFERENCES `cancer_study` (`CANCER_STUDY_ID`) ON DELETE CASCADE
ALTER TABLE sample_list ADD CONSTRAINT fk_sample_list_CANCER_STUDY_ID FOREIGN KEY(CANCER_STUDY_ID) REFERENCES [cancer_study](CANCER_STUDY_ID) ON DELETE CASCADE

ALTER TABLE [sample_list_list] ADD CONSTRAINT pk_sample_list_list PRIMARY KEY ([LIST_ID],[SAMPLE_ID])


-- TODO DEFINE: FOREIGNKEY (`SAMPLE_ID`) REFERENCES `sample` (`INTERNAL_ID`) ON DELETE CASCADE
ALTER TABLE sample_list_list ADD CONSTRAINT fk_sample_list_list_SAMPLE_ID FOREIGN KEY(SAMPLE_ID) REFERENCES [sample](INTERNAL_ID) ON DELETE CASCADE

ALTER TABLE [gene] ADD CONSTRAINT pk_gene PRIMARY KEY ([ENTREZ_GENE_ID])



 -- TODO DEFINE: SINGLEKEY `HUGO_GENE_SYMBOL` (`HUGO_GENE_SYMBOL`)
CREATE INDEX ix_gene_HUGO_GENE_SYMBOL ON gene([HUGO_GENE_SYMBOL])
ALTER TABLE [gene_alias] ADD CONSTRAINT pk_gene_alias PRIMARY KEY ([ENTREZ_GENE_ID],[GENE_ALIAS])


-- TODO DEFINE: FOREIGNKEY (`ENTREZ_GENE_ID`) REFERENCES `gene` (`ENTREZ_GENE_ID`)
ALTER TABLE gene_alias ADD CONSTRAINT fk_gene_alias_ENTREZ_GENE_ID FOREIGN KEY(ENTREZ_GENE_ID) REFERENCES [gene](ENTREZ_GENE_ID) 

ALTER TABLE [uniprot_id_mapping] ADD CONSTRAINT pk_uniprot_id_mapping PRIMARY KEY ([ENTREZ_GENE_ID],[UNIPROT_ID])



 -- TODO DEFINE: SINGLEKEY (`UNIPROT_ID`)
CREATE INDEX ix_uniprot_id_mapping_UNIPROT_ID ON uniprot_id_mapping([UNIPROT_ID])


 -- TODO DEFINE: SINGLEKEY (`UNIPROT_ACC`)
CREATE INDEX ix_uniprot_id_mapping_UNIPROT_ACC ON uniprot_id_mapping([UNIPROT_ACC])

-- TODO DEFINE: FOREIGNKEY (`ENTREZ_GENE_ID`) REFERENCES `gene` (`ENTREZ_GENE_ID`)
ALTER TABLE uniprot_id_mapping ADD CONSTRAINT fk_uniprot_id_mapping_ENTREZ_GENE_ID FOREIGN KEY(ENTREZ_GENE_ID) REFERENCES [gene](ENTREZ_GENE_ID) 

ALTER TABLE [genetic_profile] ADD CONSTRAINT pk_genetic_profile PRIMARY KEY ([GENETIC_PROFILE_ID])


-- TODO DEFINE: FOREIGNKEY (`CANCER_STUDY_ID`) REFERENCES `cancer_study` (`CANCER_STUDY_ID`) ON DELETE CASCADE
ALTER TABLE genetic_profile ADD CONSTRAINT fk_genetic_profile_CANCER_STUDY_ID FOREIGN KEY(CANCER_STUDY_ID) REFERENCES [cancer_study](CANCER_STUDY_ID) ON DELETE CASCADE



 -- TODO DEFINE: SINGLEKEY `QUICK_LOOK_UP` (`ENTREZ_GENE_ID`)
CREATE INDEX ix_genetic_alteration_ENTREZ_GENE_ID ON genetic_alteration([ENTREZ_GENE_ID])


 -- TODO DEFINE: SINGLEKEY `QUICK_LOOK_UP2` (`ENTREZ_GENE_ID`,`GENETIC_PROFILE_ID`)
CREATE INDEX ix_genetic_alteration_ENTREZ_GENE_ID_GENETIC_PROFILE_ID ON genetic_alteration([ENTREZ_GENE_ID],[GENETIC_PROFILE_ID])

-- TODO DEFINE: FOREIGNKEY (`ENTREZ_GENE_ID`) REFERENCES `gene` (`ENTREZ_GENE_ID`)
ALTER TABLE genetic_alteration ADD CONSTRAINT fk_genetic_alteration_ENTREZ_GENE_ID FOREIGN KEY(ENTREZ_GENE_ID) REFERENCES [gene](ENTREZ_GENE_ID) 


-- TODO DEFINE: FOREIGNKEY (`GENETIC_PROFILE_ID`) REFERENCES `genetic_profile` (`GENETIC_PROFILE_ID`) ON DELETE CASCADE
ALTER TABLE genetic_alteration ADD CONSTRAINT fk_genetic_alteration_GENETIC_PROFILE_ID FOREIGN KEY(GENETIC_PROFILE_ID) REFERENCES [genetic_profile](GENETIC_PROFILE_ID) ON DELETE CASCADE


-- TODO DEFINE: FOREIGNKEY (`GENETIC_PROFILE_ID`) REFERENCES `genetic_profile` (`GENETIC_PROFILE_ID`) ON DELETE CASCADE
ALTER TABLE genetic_profile_samples ADD CONSTRAINT fk_genetic_profile_samples_GENETIC_PROFILE_ID FOREIGN KEY(GENETIC_PROFILE_ID) REFERENCES [genetic_profile](GENETIC_PROFILE_ID) ON DELETE CASCADE

ALTER TABLE [gene_panel] ADD CONSTRAINT pk_gene_panel PRIMARY KEY ([INTERNAL_ID])

ALTER TABLE [gene_panel_list] ADD CONSTRAINT pk_gene_panel_list PRIMARY KEY ([INTERNAL_ID],[GENE_ID])


-- TODO DEFINE: FOREIGNKEY (`INTERNAL_ID`) REFERENCES `gene_panel` (`INTERNAL_ID`) ON DELETE CASCADE
ALTER TABLE gene_panel_list ADD CONSTRAINT fk_gene_panel_list_INTERNAL_ID FOREIGN KEY(INTERNAL_ID) REFERENCES [gene_panel](INTERNAL_ID) ON DELETE CASCADE


-- TODO DEFINE: FOREIGNKEY (`GENE_ID`) REFERENCES `gene` (`ENTREZ_GENE_ID`) ON DELETE CASCADE
ALTER TABLE gene_panel_list ADD CONSTRAINT fk_gene_panel_list_GENE_ID FOREIGN KEY(GENE_ID) REFERENCES [gene](ENTREZ_GENE_ID) ON DELETE CASCADE



 CREATE INDEX ix_sample_profile_UQ_SAMPLE_ID_GENETIC_PROFILE_ID ON [sample_profile]([SAMPLE_ID],[GENETIC_PROFILE_ID])

 -- TODO DEFINE: SINGLEKEY (`SAMPLE_ID`)
CREATE INDEX ix_sample_profile_SAMPLE_ID ON sample_profile([SAMPLE_ID])

-- TODO DEFINE: FOREIGNKEY (`GENETIC_PROFILE_ID`) REFERENCES `genetic_profile` (`GENETIC_PROFILE_ID`) ON DELETE CASCADE
ALTER TABLE sample_profile ADD CONSTRAINT fk_sample_profile_GENETIC_PROFILE_ID FOREIGN KEY(GENETIC_PROFILE_ID) REFERENCES [genetic_profile](GENETIC_PROFILE_ID) ON DELETE CASCADE


-- TODO DEFINE: FOREIGNKEY (`SAMPLE_ID`) REFERENCES `sample` (`INTERNAL_ID`) ON DELETE CASCADE
ALTER TABLE sample_profile ADD CONSTRAINT fk_sample_profile_SAMPLE_ID FOREIGN KEY(SAMPLE_ID) REFERENCES [sample](INTERNAL_ID) ON DELETE CASCADE


-- TODO DEFINE: FOREIGNKEY (`PANEL_ID`) REFERENCES `gene_panel` (`INTERNAL_ID`) ON DELETE RESTRICT
ALTER TABLE sample_profile ADD CONSTRAINT fk_sample_profile_PANEL_ID FOREIGN KEY(PANEL_ID) REFERENCES [gene_panel](INTERNAL_ID) ON DELETE NO ACTION

ALTER TABLE [structural_variant] ADD CONSTRAINT pk_structural_variant PRIMARY KEY ([INTERNAL_ID])


-- TODO DEFINE: FOREIGNKEY (`SAMPLE_ID`) REFERENCES `sample` (`INTERNAL_ID`) ON DELETE CASCADE
ALTER TABLE structural_variant ADD CONSTRAINT fk_structural_variant_SAMPLE_ID FOREIGN KEY(SAMPLE_ID) REFERENCES [sample](INTERNAL_ID) ON DELETE CASCADE


-- TODO DEFINE: FOREIGNKEY (`SITE1_ENTREZ_GENE_ID`) REFERENCES `gene` (`ENTREZ_GENE_ID`) ON DELETE CASCADE
ALTER TABLE structural_variant ADD CONSTRAINT fk_structural_variant_SITE1_ENTREZ_GENE_ID FOREIGN KEY(SITE1_ENTREZ_GENE_ID) REFERENCES [gene](ENTREZ_GENE_ID) ON DELETE CASCADE


-- TODO DEFINE: FOREIGNKEY (`SITE2_ENTREZ_GENE_ID`) REFERENCES `gene` (`ENTREZ_GENE_ID`) ON DELETE CASCADE
ALTER TABLE structural_variant ADD CONSTRAINT fk_structural_variant_SITE2_ENTREZ_GENE_ID FOREIGN KEY(SITE2_ENTREZ_GENE_ID) REFERENCES [gene](ENTREZ_GENE_ID) ON DELETE CASCADE


-- TODO DEFINE: FOREIGNKEY (`GENETIC_PROFILE_ID`) REFERENCES `genetic_profile` (`GENETIC_PROFILE_ID`) ON DELETE CASCADE
ALTER TABLE structural_variant ADD CONSTRAINT fk_structural_variant_GENETIC_PROFILE_ID FOREIGN KEY(GENETIC_PROFILE_ID) REFERENCES [genetic_profile](GENETIC_PROFILE_ID) ON DELETE CASCADE

ALTER TABLE [mutation_event] ADD CONSTRAINT pk_mutation_event PRIMARY KEY ([MUTATION_EVENT_ID])



 -- TODO DEFINE: SINGLEKEY (`KEYWORD`)
CREATE INDEX ix_mutation_event_KEYWORD ON mutation_event([KEYWORD])

-- TODO DEFINE: FOREIGNKEY (`ENTREZ_GENE_ID`) REFERENCES `gene` (`ENTREZ_GENE_ID`)
ALTER TABLE mutation_event ADD CONSTRAINT fk_mutation_event_ENTREZ_GENE_ID FOREIGN KEY(ENTREZ_GENE_ID) REFERENCES [gene](ENTREZ_GENE_ID) 



 CREATE INDEX ix_mutation_UQ_MUTATION_EVENT_ID_GENETIC_PROFILE_ID_SAMPLE_ID ON [mutation]([MUTATION_EVENT_ID],[GENETIC_PROFILE_ID],[SAMPLE_ID])

 -- TODO DEFINE: SINGLEKEY (`GENETIC_PROFILE_ID`,`ENTREZ_GENE_ID`)
CREATE INDEX ix_mutation_GENETIC_PROFILE_ID_ENTREZ_GENE_ID ON mutation([GENETIC_PROFILE_ID],[ENTREZ_GENE_ID])


 -- TODO DEFINE: SINGLEKEY (`GENETIC_PROFILE_ID`,`SAMPLE_ID`)
CREATE INDEX ix_mutation_GENETIC_PROFILE_ID_SAMPLE_ID ON mutation([GENETIC_PROFILE_ID],[SAMPLE_ID])


 -- TODO DEFINE: SINGLEKEY (`GENETIC_PROFILE_ID`)
CREATE INDEX ix_mutation_GENETIC_PROFILE_ID ON mutation([GENETIC_PROFILE_ID])


 -- TODO DEFINE: SINGLEKEY (`ENTREZ_GENE_ID`)
CREATE INDEX ix_mutation_ENTREZ_GENE_ID ON mutation([ENTREZ_GENE_ID])


 -- TODO DEFINE: SINGLEKEY (`SAMPLE_ID`)
CREATE INDEX ix_mutation_SAMPLE_ID ON mutation([SAMPLE_ID])


 -- TODO DEFINE: SINGLEKEY (`MUTATION_EVENT_ID`)
CREATE INDEX ix_mutation_MUTATION_EVENT_ID ON mutation([MUTATION_EVENT_ID])

-- TODO DEFINE: FOREIGNKEY (`MUTATION_EVENT_ID`) REFERENCES `mutation_event` (`MUTATION_EVENT_ID`)
ALTER TABLE mutation ADD CONSTRAINT fk_mutation_MUTATION_EVENT_ID FOREIGN KEY(MUTATION_EVENT_ID) REFERENCES [mutation_event](MUTATION_EVENT_ID) 


-- TODO DEFINE: FOREIGNKEY (`ENTREZ_GENE_ID`) REFERENCES `gene` (`ENTREZ_GENE_ID`)
ALTER TABLE mutation ADD CONSTRAINT fk_mutation_ENTREZ_GENE_ID FOREIGN KEY(ENTREZ_GENE_ID) REFERENCES [gene](ENTREZ_GENE_ID) 


-- TODO DEFINE: FOREIGNKEY (`GENETIC_PROFILE_ID`) REFERENCES `genetic_profile` (`GENETIC_PROFILE_ID`) ON DELETE CASCADE
ALTER TABLE mutation ADD CONSTRAINT fk_mutation_GENETIC_PROFILE_ID FOREIGN KEY(GENETIC_PROFILE_ID) REFERENCES [genetic_profile](GENETIC_PROFILE_ID) ON DELETE CASCADE


-- TODO DEFINE: FOREIGNKEY (`SAMPLE_ID`) REFERENCES `sample` (`INTERNAL_ID`) ON DELETE CASCADE
ALTER TABLE mutation ADD CONSTRAINT fk_mutation_SAMPLE_ID FOREIGN KEY(SAMPLE_ID) REFERENCES [sample](INTERNAL_ID) ON DELETE CASCADE



 -- TODO DEFINE: SINGLEKEY (`GENETIC_PROFILE_ID`,`SAMPLE_ID`)
CREATE INDEX ix_mutation_count_GENETIC_PROFILE_ID_SAMPLE_ID ON mutation_count([GENETIC_PROFILE_ID],[SAMPLE_ID])

-- TODO DEFINE: FOREIGNKEY (`GENETIC_PROFILE_ID`) REFERENCES `genetic_profile` (`GENETIC_PROFILE_ID`) ON DELETE CASCADE
ALTER TABLE mutation_count ADD CONSTRAINT fk_mutation_count_GENETIC_PROFILE_ID FOREIGN KEY(GENETIC_PROFILE_ID) REFERENCES [genetic_profile](GENETIC_PROFILE_ID) ON DELETE CASCADE


-- TODO DEFINE: FOREIGNKEY (`SAMPLE_ID`) REFERENCES `sample` (`INTERNAL_ID`) ON DELETE CASCADE
ALTER TABLE mutation_count ADD CONSTRAINT fk_mutation_count_SAMPLE_ID FOREIGN KEY(SAMPLE_ID) REFERENCES [sample](INTERNAL_ID) ON DELETE CASCADE

ALTER TABLE [clinical_patient] ADD CONSTRAINT pk_clinical_patient PRIMARY KEY ([INTERNAL_ID],[ATTR_ID])


-- TODO DEFINE: FOREIGNKEY (`INTERNAL_ID`) REFERENCES `patient` (`INTERNAL_ID`) ON DELETE CASCADE
ALTER TABLE clinical_patient ADD CONSTRAINT fk_clinical_patient_INTERNAL_ID FOREIGN KEY(INTERNAL_ID) REFERENCES [patient](INTERNAL_ID) ON DELETE CASCADE

ALTER TABLE [clinical_sample] ADD CONSTRAINT pk_clinical_sample PRIMARY KEY ([INTERNAL_ID],[ATTR_ID])


-- TODO DEFINE: FOREIGNKEY (`INTERNAL_ID`) REFERENCES `sample` (`INTERNAL_ID`) ON DELETE CASCADE
ALTER TABLE clinical_sample ADD CONSTRAINT fk_clinical_sample_INTERNAL_ID FOREIGN KEY(INTERNAL_ID) REFERENCES [sample](INTERNAL_ID) ON DELETE CASCADE

ALTER TABLE [clinical_attribute_meta] ADD CONSTRAINT pk_clinical_attribute_meta PRIMARY KEY ([ATTR_ID],[CANCER_STUDY_ID])


-- TODO DEFINE: FOREIGNKEY (`CANCER_STUDY_ID`) REFERENCES `cancer_study` (`CANCER_STUDY_ID`) ON DELETE CASCADE
ALTER TABLE clinical_attribute_meta ADD CONSTRAINT fk_clinical_attribute_meta_CANCER_STUDY_ID FOREIGN KEY(CANCER_STUDY_ID) REFERENCES [cancer_study](CANCER_STUDY_ID) ON DELETE CASCADE

ALTER TABLE [mut_sig] ADD CONSTRAINT pk_mut_sig PRIMARY KEY ([CANCER_STUDY_ID],[ENTREZ_GENE_ID])


-- TODO DEFINE: FOREIGNKEY (`CANCER_STUDY_ID`) REFERENCES `cancer_study` (`CANCER_STUDY_ID`) ON DELETE CASCADE
ALTER TABLE mut_sig ADD CONSTRAINT fk_mut_sig_CANCER_STUDY_ID FOREIGN KEY(CANCER_STUDY_ID) REFERENCES [cancer_study](CANCER_STUDY_ID) ON DELETE CASCADE


-- TODO DEFINE: FOREIGNKEY (`ENTREZ_GENE_ID`) REFERENCES `gene` (`ENTREZ_GENE_ID`)
ALTER TABLE mut_sig ADD CONSTRAINT fk_mut_sig_ENTREZ_GENE_ID FOREIGN KEY(ENTREZ_GENE_ID) REFERENCES [gene](ENTREZ_GENE_ID) 

ALTER TABLE [protein_array_info] ADD CONSTRAINT pk_protein_array_info PRIMARY KEY ([PROTEIN_ARRAY_ID])

ALTER TABLE [protein_array_target] ADD CONSTRAINT pk_protein_array_target PRIMARY KEY ([PROTEIN_ARRAY_ID],[ENTREZ_GENE_ID])


-- TODO DEFINE: FOREIGNKEY (`ENTREZ_GENE_ID`) REFERENCES `gene` (`ENTREZ_GENE_ID`)
ALTER TABLE protein_array_target ADD CONSTRAINT fk_protein_array_target_ENTREZ_GENE_ID FOREIGN KEY(ENTREZ_GENE_ID) REFERENCES [gene](ENTREZ_GENE_ID) 


-- TODO DEFINE: FOREIGNKEY (`PROTEIN_ARRAY_ID`) REFERENCES `protein_array_info` (`PROTEIN_ARRAY_ID`)
ALTER TABLE protein_array_target ADD CONSTRAINT fk_protein_array_target_PROTEIN_ARRAY_ID FOREIGN KEY(PROTEIN_ARRAY_ID) REFERENCES [protein_array_info](PROTEIN_ARRAY_ID) 

ALTER TABLE [protein_array_data] ADD CONSTRAINT pk_protein_array_data PRIMARY KEY ([PROTEIN_ARRAY_ID],[CANCER_STUDY_ID],[SAMPLE_ID])


-- TODO DEFINE: FOREIGNKEY (`PROTEIN_ARRAY_ID`) REFERENCES `protein_array_info` (`PROTEIN_ARRAY_ID`)
ALTER TABLE protein_array_data ADD CONSTRAINT fk_protein_array_data_PROTEIN_ARRAY_ID FOREIGN KEY(PROTEIN_ARRAY_ID) REFERENCES [protein_array_info](PROTEIN_ARRAY_ID) 


-- TODO DEFINE: FOREIGNKEY (`CANCER_STUDY_ID`) REFERENCES `cancer_study` (`CANCER_STUDY_ID`) ON DELETE CASCADE
ALTER TABLE protein_array_data ADD CONSTRAINT fk_protein_array_data_CANCER_STUDY_ID FOREIGN KEY(CANCER_STUDY_ID) REFERENCES [cancer_study](CANCER_STUDY_ID) ON DELETE CASCADE


-- TODO DEFINE: FOREIGNKEY (`SAMPLE_ID`) REFERENCES `sample` (`INTERNAL_ID`) ON DELETE CASCADE
ALTER TABLE protein_array_data ADD CONSTRAINT fk_protein_array_data_SAMPLE_ID FOREIGN KEY(SAMPLE_ID) REFERENCES [sample](INTERNAL_ID) ON DELETE CASCADE

ALTER TABLE [protein_array_cancer_study] ADD CONSTRAINT pk_protein_array_cancer_study PRIMARY KEY ([PROTEIN_ARRAY_ID],[CANCER_STUDY_ID])


-- TODO DEFINE: FOREIGNKEY (`CANCER_STUDY_ID`) REFERENCES `cancer_study` (`CANCER_STUDY_ID`) ON DELETE CASCADE
ALTER TABLE protein_array_cancer_study ADD CONSTRAINT fk_protein_array_cancer_study_CANCER_STUDY_ID FOREIGN KEY(CANCER_STUDY_ID) REFERENCES [cancer_study](CANCER_STUDY_ID) ON DELETE CASCADE


-- TODO DEFINE: FOREIGNKEY (`ENTREZ_GENE_ID`) REFERENCES `gene` (`ENTREZ_GENE_ID`)
ALTER TABLE sanger_cancer_census ADD CONSTRAINT fk_sanger_cancer_census_ENTREZ_GENE_ID FOREIGN KEY(ENTREZ_GENE_ID) REFERENCES [gene](ENTREZ_GENE_ID) 

ALTER TABLE [gistic] ADD CONSTRAINT pk_gistic PRIMARY KEY ([GISTIC_ROI_ID])


-- TODO DEFINE: FOREIGNKEY (`CANCER_STUDY_ID`) REFERENCES `cancer_study` (`CANCER_STUDY_ID`) ON DELETE CASCADE
ALTER TABLE gistic ADD CONSTRAINT fk_gistic_CANCER_STUDY_ID FOREIGN KEY(CANCER_STUDY_ID) REFERENCES [cancer_study](CANCER_STUDY_ID) ON DELETE CASCADE

ALTER TABLE [gistic_to_gene] ADD CONSTRAINT pk_gistic_to_gene PRIMARY KEY ([GISTIC_ROI_ID],[ENTREZ_GENE_ID])


-- TODO DEFINE: FOREIGNKEY (`ENTREZ_GENE_ID`) REFERENCES `gene` (`ENTREZ_GENE_ID`)
ALTER TABLE gistic_to_gene ADD CONSTRAINT fk_gistic_to_gene_ENTREZ_GENE_ID FOREIGN KEY(ENTREZ_GENE_ID) REFERENCES [gene](ENTREZ_GENE_ID) 


-- TODO DEFINE: FOREIGNKEY (`GISTIC_ROI_ID`) REFERENCES `gistic` (`GISTIC_ROI_ID`)
ALTER TABLE gistic_to_gene ADD CONSTRAINT fk_gistic_to_gene_GISTIC_ROI_ID FOREIGN KEY(GISTIC_ROI_ID) REFERENCES [gistic](GISTIC_ROI_ID) 

ALTER TABLE [text_cache] ADD CONSTRAINT pk_text_cache PRIMARY KEY ([HASH_KEY])

ALTER TABLE [pfam_graphics] ADD CONSTRAINT pk_pfam_graphics PRIMARY KEY ([UNIPROT_ACC])

ALTER TABLE [drug] ADD CONSTRAINT pk_drug PRIMARY KEY ([DRUG_ID])



 -- TODO DEFINE: SINGLEKEY `DRUG_NAME` (`DRUG_NAME`)
CREATE INDEX ix_drug_DRUG_NAME ON drug([DRUG_NAME])

-- TODO DEFINE: FOREIGNKEY (`DRUG`) REFERENCES `drug` (`DRUG_ID`)
ALTER TABLE drug_interaction ADD CONSTRAINT fk_drug_interaction_DRUG FOREIGN KEY(DRUG) REFERENCES [drug](DRUG_ID) 

ALTER TABLE [cna_event] ADD CONSTRAINT pk_cna_event PRIMARY KEY ([CNA_EVENT_ID])


-- TODO DEFINE: FOREIGNKEY (`ENTREZ_GENE_ID`) REFERENCES `gene` (`ENTREZ_GENE_ID`)
ALTER TABLE cna_event ADD CONSTRAINT fk_cna_event_ENTREZ_GENE_ID FOREIGN KEY(ENTREZ_GENE_ID) REFERENCES [gene](ENTREZ_GENE_ID) 

ALTER TABLE [sample_cna_event] ADD CONSTRAINT pk_sample_cna_event PRIMARY KEY ([CNA_EVENT_ID],[SAMPLE_ID],[GENETIC_PROFILE_ID])



 -- TODO DEFINE: SINGLEKEY (`GENETIC_PROFILE_ID`,`SAMPLE_ID`)
CREATE INDEX ix_sample_cna_event_GENETIC_PROFILE_ID_SAMPLE_ID ON sample_cna_event([GENETIC_PROFILE_ID],[SAMPLE_ID])

-- TODO DEFINE: FOREIGNKEY (`CNA_EVENT_ID`) REFERENCES `cna_event` (`CNA_EVENT_ID`)
ALTER TABLE sample_cna_event ADD CONSTRAINT fk_sample_cna_event_CNA_EVENT_ID FOREIGN KEY(CNA_EVENT_ID) REFERENCES [cna_event](CNA_EVENT_ID) 


-- TODO DEFINE: FOREIGNKEY (`GENETIC_PROFILE_ID`) REFERENCES `genetic_profile` (`GENETIC_PROFILE_ID`) ON DELETE CASCADE
ALTER TABLE sample_cna_event ADD CONSTRAINT fk_sample_cna_event_GENETIC_PROFILE_ID FOREIGN KEY(GENETIC_PROFILE_ID) REFERENCES [genetic_profile](GENETIC_PROFILE_ID) ON DELETE CASCADE


-- TODO DEFINE: FOREIGNKEY (`SAMPLE_ID`) REFERENCES `sample` (`INTERNAL_ID`) ON DELETE CASCADE
ALTER TABLE sample_cna_event ADD CONSTRAINT fk_sample_cna_event_SAMPLE_ID FOREIGN KEY(SAMPLE_ID) REFERENCES [sample](INTERNAL_ID) ON DELETE CASCADE

ALTER TABLE [copy_number_seg] ADD CONSTRAINT pk_copy_number_seg PRIMARY KEY ([SEG_ID])



 -- TODO DEFINE: SINGLEKEY (`CANCER_STUDY_ID`,`SAMPLE_ID`)
CREATE INDEX ix_copy_number_seg_CANCER_STUDY_ID_SAMPLE_ID ON copy_number_seg([CANCER_STUDY_ID],[SAMPLE_ID])

-- TODO DEFINE: FOREIGNKEY (`CANCER_STUDY_ID`) REFERENCES `cancer_study` (`CANCER_STUDY_ID`) ON DELETE CASCADE
ALTER TABLE copy_number_seg ADD CONSTRAINT fk_copy_number_seg_CANCER_STUDY_ID FOREIGN KEY(CANCER_STUDY_ID) REFERENCES [cancer_study](CANCER_STUDY_ID) ON DELETE CASCADE


-- TODO DEFINE: FOREIGNKEY (`SAMPLE_ID`) REFERENCES `sample` (`INTERNAL_ID`) ON DELETE CASCADE
ALTER TABLE copy_number_seg ADD CONSTRAINT fk_copy_number_seg_SAMPLE_ID FOREIGN KEY(SAMPLE_ID) REFERENCES [sample](INTERNAL_ID) ON DELETE CASCADE

ALTER TABLE [copy_number_seg_file] ADD CONSTRAINT pk_copy_number_seg_file PRIMARY KEY ([SEG_FILE_ID])


-- TODO DEFINE: FOREIGNKEY (`CANCER_STUDY_ID`) REFERENCES `cancer_study` (`CANCER_STUDY_ID`) ON DELETE CASCADE
ALTER TABLE copy_number_seg_file ADD CONSTRAINT fk_copy_number_seg_file_CANCER_STUDY_ID FOREIGN KEY(CANCER_STUDY_ID) REFERENCES [cancer_study](CANCER_STUDY_ID) ON DELETE CASCADE

ALTER TABLE [cosmic_mutation] ADD CONSTRAINT pk_cosmic_mutation PRIMARY KEY ([COSMIC_MUTATION_ID])



 -- TODO DEFINE: SINGLEKEY (`KEYWORD`)
CREATE INDEX ix_cosmic_mutation_KEYWORD ON cosmic_mutation([KEYWORD])

-- TODO DEFINE: FOREIGNKEY (`ENTREZ_GENE_ID`) REFERENCES `gene` (`ENTREZ_GENE_ID`)
ALTER TABLE cosmic_mutation ADD CONSTRAINT fk_cosmic_mutation_ENTREZ_GENE_ID FOREIGN KEY(ENTREZ_GENE_ID) REFERENCES [gene](ENTREZ_GENE_ID) 

ALTER TABLE [pdb_uniprot_alignment] ADD CONSTRAINT pk_pdb_uniprot_alignment PRIMARY KEY ([ALIGNMENT_ID])



 -- TODO DEFINE: SINGLEKEY(`UNIPROT_ID`)
CREATE INDEX ix_pdb_uniprot_alignment_UNIPROT_ID ON pdb_uniprot_alignment([UNIPROT_ID])


 -- TODO DEFINE: SINGLEKEY(`PDB_ID`, `CHAIN`)
CREATE INDEX ix_pdb_uniprot_alignment_PDB_ID_CHAIN ON pdb_uniprot_alignment([PDB_ID],[CHAIN])


 -- TODO DEFINE: SINGLEKEY(`ALIGNMENT_ID`, `UNIPROT_POSITION`)
CREATE INDEX ix_pdb_uniprot_residue_mapping_ALIGNMENT_ID_UNIPROT_POSITION ON pdb_uniprot_residue_mapping([ALIGNMENT_ID],[UNIPROT_POSITION])

-- TODO DEFINE: FOREIGNKEY(`ALIGNMENT_ID`) REFERENCES `pdb_uniprot_alignment` (`ALIGNMENT_ID`)
ALTER TABLE pdb_uniprot_residue_mapping ADD CONSTRAINT fk_pdb_uniprot_residue_mapping_ALIGNMENT_ID FOREIGN KEY(ALIGNMENT_ID) REFERENCES [pdb_uniprot_alignment](ALIGNMENT_ID) 

ALTER TABLE [clinical_event] ADD CONSTRAINT pk_clinical_event PRIMARY KEY ([CLINICAL_EVENT_ID])



 -- TODO DEFINE: SINGLEKEY (`PATIENT_ID`, `EVENT_TYPE`)
CREATE INDEX ix_clinical_event_PATIENT_ID_EVENT_TYPE ON clinical_event([PATIENT_ID],[EVENT_TYPE])

-- TODO DEFINE: FOREIGNKEY (`PATIENT_ID`) REFERENCES `patient` (`INTERNAL_ID`) ON DELETE CASCADE
ALTER TABLE clinical_event ADD CONSTRAINT fk_clinical_event_PATIENT_ID FOREIGN KEY(PATIENT_ID) REFERENCES [patient](INTERNAL_ID) ON DELETE CASCADE


-- TODO DEFINE: FOREIGNKEY (`CLINICAL_EVENT_ID`) REFERENCES `clinical_event` (`CLINICAL_EVENT_ID`) ON DELETE CASCADE
ALTER TABLE clinical_event_data ADD CONSTRAINT fk_clinical_event_data_CLINICAL_EVENT_ID FOREIGN KEY(CLINICAL_EVENT_ID) REFERENCES [clinical_event](CLINICAL_EVENT_ID) ON DELETE CASCADE



GO

